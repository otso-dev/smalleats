<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserDAOImpl">

    <resultMap id="userMap" type="User">
        <id property="userId" column="user_id"/>
        <result property="userName" column="username"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="phoneNumber" column="phone_number"/>
        <collection property="authorities" javaType="list" resultMap="authorityMap"/>
    </resultMap>

    <resultMap id="partnerUserMap" type="PartnerUser">
        <id property="partnerId" column="partner_id"/>
        <result property="partnerUserName" column="partner_username"/>
        <result property="partnerPassword" column="partner_user_password"/>
        <result property="partnerUserEmail" column="partner_user_email"/>
        <result property="partnerPhoneNumber" column="partner_phone_number"/>
        <result property="partnerBusinessName" column="partner_business_name"/>
        <result property="partnerBusinessNumber" column="partner_business_number"/>
        <collection property="authorities" javaType="list" resultMap="authorityMap"/>
    </resultMap>

    <resultMap type="Authority" id="authorityMap">
        <id property="authorityId" column="authority_id"/>
        <result property="userId" column="user_id"/>
        <result property="roleId" column="role_id"/>
        <association property="role" resultMap="roleMap" />
    </resultMap>

    <resultMap id="roleMap" type="Role">
        <id property="roleId" column="role_id"/>
        <result property="roleName" column="role_name"/>
    </resultMap>

    <resultMap id="paymentMap" type="Payment">
        <id property="paymentId" column="payment_id"/>
        <result property="orderId" column="order_id"/>
        <result property="foodId" column="food_id"/>
        <result property="paymentPrice" column="payment_price"/>
        <result property="paymentOrderState" column="payment_order_state"/>
        <result property="paymentDay" column="payment_day"/>
        <association property="order" resultMap="orderMap"/>
        <association property="foodProduct" resultMap="foodMap"/>
    </resultMap>

    <resultMap id="orderMap" type="Order">
        <id property="orderId" column="order_id"/>
        <result property="userId" column="user_id"/>
        <result property="orderReqTime" column="order_req_time"/>
        <result property="orderDeliveryDay" column="order_delivery_day"/>
        <result property="orderRoadAddress" column="user_road_address"/>
        <result property="orderDetailAddress" column="user_detail_address"/>
        <result property="orderZoneCode" column="user_zonecode"/>
        <association property="user" resultMap="userMap"/>
        <association property="orderMenu" resultMap="orderMenuMap"/>
    </resultMap>

    <resultMap id="foodMap" type="FoodProduct">
        <id property="foodId" column="food_id"/>
        <result property="foodName" column="food_name"/>
    </resultMap>

    <resultMap id="orderMenuMap" type="OrderMenu">
        <result property="orderId" column="order_id"/>
        <result property="menuInfo" column="order_menu_info"/>
        <association property="order" resultMap="orderMap"/>
    </resultMap>

<!--resultMap-->

    <select id="findUserByEmail" resultMap="userMap">
        select
            ub.user_id,
            ub.email,
            ub.password,
            ub.username,
            ub.phone_number,

            ab.authority_id,
            ab.user_id,
            ab.role_id,

            rb.role_id,
            rb.role_name

        from
            user_tb ub
                left outer join authority_tb ab on(ab.user_id = ub.user_id)
                left outer join role_tb rb on(rb.role_id = ab.role_id)
        where
            ub.email = #{email}
    </select>
    <insert id="saveUser" parameterType="User"
            useGeneratedKeys="true"
            keyProperty="userId">
        insert into user_tb (user_id, username, email, password, phone_number, profile_img, provider)
        values (0, #{userName},#{email},#{password},#{phoneNumber},#{profileImg},#{provider})
    </insert>
    <insert id="addAuthority" parameterType="Authority">
        insert into authority_tb (authority_id, user_id, role_id,partner_id)
        values (0,#{userId},#{roleId},#{partnerId})
    </insert>
    <update id="passwordUpdate">
        update user_tb
        set password = #{changePassword}
        where
            user_id = #{userId}
    </update>


<!--partner-->
    <select id="findPartnerUserByEmail" resultMap="partnerUserMap">
        select
            pb.partner_id,
            pb.partner_username,
            pb.partner_user_password,
            pb.partner_user_email,
            pb.partner_phone_number,
            pb.partner_business_name,
            pb.partner_business_number,

            ab.authority_id,
            ab.role_id,
            ab.partner_id,
            rt.role_id,
            rt.role_name

        from partner_user_tb pb
        left join authority_tb ab on pb.partner_id = ab.partner_id
        left join role_tb rt on ab.role_id = rt.role_id
        where
            partner_user_email = #{email};
    </select>

    <insert id="savePartnerUser" parameterType="PartnerUser"
            useGeneratedKeys="true"
            keyProperty="partnerId">
        insert into partner_user_tb
        (partner_id, partner_username, partner_user_password, partner_user_email, partner_phone_number, partner_business_name, partner_business_number)
        values (0,#{partnerUserName},#{partnerPassword},#{partnerUserEmail},#{partnerPhoneNumber},#{partnerBusinessName},#{partnerBusinessNumber});
    </insert>

    <select id="getUserOrderList" resultMap="paymentMap">

        select
            pb.order_id,
            pb.food_id,
            pb.payment_order_state,
            pb.payment_price,
            pb.payment_day,
            ot.user_id,
            ot.order_req_time,
            ot.order_delivery_day,
            ot.user_road_address,
            ot.user_detail_address,
            ot.user_zonecode,
            ft.food_name,
            omt.order_menu_info

        from
            payment_tb pb
                left outer join smalleatsDB.order_tb ot on pb.order_id = ot.order_id
                left outer join smalleatsDB.food_tb ft on pb.food_id = ft.food_id
                left outer join smalleatsDB.order_menu_tb omt on ot.order_id = omt.order_id
        where
            ot.user_id = #{userId};
    </select>

    <select id="getUserOrderMenuList" resultMap="orderMenuMap">
        select
            omt.order_menu_info,
            ot.order_id
        from
            order_menu_tb omt
                left join smalleatsDB.order_tb ot on omt.order_id = ot.order_id
        where
            ot.user_id = #{userId}
    </select>
</mapper>